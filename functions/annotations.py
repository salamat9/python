# Задача. Вы определили функцию, но хотели бы прикрепить дополнительную
# информацию к аргументам, чтобы другим людям было легче понять,
# что делает эта функция.

# Решение. Аннотации аргументов могут быть полезны, чтобы помочь
# программистам разобраться в том, как нужно применять функцию.
# Например, рассмотрим такую аннотированную функцию:

def add(x: int, y: int) -> int:
    return x + y

# Интерпретатор Python не прикрепляет никакого семантического смысла к
# аннотациям. Это не проверки типов, они вообще никак не влияют на поведение Python.
# Однако они могут помогать другим людям читать исходный код и понимать,
# что вы имели в виду. А вот сторонние инструменты и фреймворки могут прикреплять
# к аннотациям семантический смысл. Также они появляются в документации:

help(add)

# Обсуждение. Аннотации функции хранятся в атрибуте функции __annotations__.
# Например:

print(add.__annotations__)  # {'y': <class 'int'>, 'return': <class 'int'>, 'x': <class 'int'>}

